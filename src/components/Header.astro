---
import Hr from "./Hr.astro";
import IconX from "@/assets/icons/IconX.svg";
import IconMoon from "@/assets/icons/IconMoon.svg";
import IconSearch from "@/assets/icons/IconSearch.svg";
import IconArchive from "@/assets/icons/IconArchive.svg";
import IconSunHigh from "@/assets/icons/IconSunHigh.svg";
import IconMenuDeep from "@/assets/icons/IconMenuDeep.svg";
import IconRss from "@/assets/icons/IconRss.svg";
import LinkButton from "./LinkButton.astro";
import { SITE } from "@/config";

const { pathname } = Astro.url;

// Remove trailing slash from current pathname if exists
const currentPath =
  pathname.endsWith("/") && pathname !== "/" ? pathname.slice(0, -1) : pathname;

const isActive = (path: string) => {
  const currentPathArray = currentPath.split("/").filter(p => p.trim());
  const pathArray = path.split("/").filter(p => p.trim());

  return currentPath === path || currentPathArray[0] === pathArray[0];
};
---

<header>
  <a
    id="skip-to-content"
    href="#main-content"
    class="absolute -top-full left-16 z-50 bg-background px-3 py-2 text-accent backdrop-blur-lg transition-all focus:top-4"
  >
    Skip to content
  </a>
  <div
    id="nav-container"
    class="mx-auto flex max-w-3xl flex-col items-center justify-between sm:flex-row"
  >
    <div
      id="top-nav-wrap"
      class="relative flex w-full items-baseline justify-between bg-background p-4 sm:items-center sm:py-6"
    >
      <a
        href="/"
        class="absolute py-1 text-xl leading-8 font-semibold whitespace-nowrap sm:static sm:my-auto sm:text-2xl sm:leading-none flex items-center gap-2"
      >
        {SITE.title}
        <a
          target="_blank"
          href="/rss.xml"
          class="rss-link"
          aria-label="rss feed"
          title="RSS Feed"
        >
          <IconRss
            width={20}
            height={20}
            class="rss-icon"
          />
          <span class="sr-only">RSS Feed</span>
        </a>
      </a>
      <nav
        id="nav-menu"
        class="flex w-full flex-col items-center sm:ml-2 sm:flex-row sm:justify-end sm:space-x-4 sm:py-0"
      >
        <button
          id="menu-btn"
          class="focus-outline self-end p-2 sm:hidden"
          aria-label="Open Menu"
          aria-expanded="false"
          aria-controls="menu-items"
        >
          <IconX id="close-icon" class="hidden" />
          <IconMenuDeep id="menu-icon" />
        </button>
        <ul
          id="menu-items"
          class:list={[
            "mt-4 grid w-44 grid-cols-2 place-content-center gap-2",
            "[&>li>a]:block [&>li>a]:px-4 [&>li>a]:py-3 [&>li>a]:text-center [&>li>a]:font-medium [&>li>a]:hover:text-accent sm:[&>li>a]:px-2 sm:[&>li>a]:py-1",
            "hidden",
            "sm:mt-0 sm:ml-0 sm:flex sm:w-auto sm:gap-x-5 sm:gap-y-0",
          ]}
        >
          <li class="col-span-2">
            <a href="/posts" class:list={{ "active-nav": isActive("/posts") }}>
              Posts
            </a>
          </li>
          <li class="col-span-2">
            <a href="/tags" class:list={{ "active-nav": isActive("/tags") }}>
              Tags
            </a>
          </li>
          <li class="col-span-2">
            <a href="/about" class:list={{ "active-nav": isActive("/about") }}>
              About
            </a>
          </li>
          <!-- ÊäòÂè†ËèúÂçï -->
          <li class="col-span-2 relative dropdown-container">
            <button 
              id="more-menu-btn"
              class="dropdown-trigger w-full px-4 py-3 text-center font-medium hover:text-accent sm:px-2 sm:py-1 flex items-center justify-center gap-1"
              aria-expanded="false"
              aria-haspopup="true"
            >
              More
              <svg class="dropdown-arrow w-4 h-4 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
              </svg>
            </button>
            <ul 
              id="more-menu-items"
              class="dropdown-menu absolute top-full left-0 w-full rounded-lg shadow-lg hidden z-50 overflow-hidden"
            >
              <li>
                <a href="/creative-coding" class="dropdown-link block px-4 py-3 hover:bg-card hover:text-accent transition-colors" class:list={{ "active-nav": isActive("/creative-coding") }}>
                  üé® ÂàõÊÑèÁºñÁ®ã
                </a>
              </li>
              <li>
                <a href="/xingsi" class="dropdown-link block px-4 py-3 hover:bg-card hover:text-accent transition-colors" class:list={{ "active-nav": isActive("/xingsi") }}>
                  üìî Ë°åÊÄùÂΩï
                </a>
              </li>
              <li>
                <a href="/admin" class="dropdown-link block px-4 py-3 hover:bg-card hover:text-accent transition-colors" class:list={{ "active-nav": isActive("/admin") }}>
                  ‚öôÔ∏è ÁÆ°ÁêÜ
                </a>
              </li>
            </ul>
          </li>
          {
            SITE.showArchives && (
              <li class="col-span-2">
                <LinkButton
                  href="/archives"
                  class:list={[
                    "focus-outline flex justify-center p-3 sm:p-1",
                    {
                      "active-nav [&>svg]:stroke-accent": isActive("/archives"),
                    },
                  ]}
                  ariaLabel="archives"
                  title="Archives"
                >
                  <IconArchive class="hidden sm:inline-block" />
                  <span class="sm:sr-only">Archives</span>
                </LinkButton>
              </li>
            )
          }
          <li class="col-span-1 flex items-center justify-center">
            <LinkButton
              href="/search"
              class:list={[
                "focus-outline flex p-3 sm:p-1",
                { "[&>svg]:stroke-accent": isActive("/search") },
              ]}
              ariaLabel="search"
              title="Search"
            >
              <IconSearch />
              <span class="sr-only">Search</span>
            </LinkButton>
          </li>
          {
            SITE.lightAndDarkMode && (
              <li class="col-span-1 flex items-center justify-center">
                <button
                  id="theme-btn"
                  class="focus-outline relative size-12 p-4 sm:size-8 hover:[&>svg]:stroke-accent"
                  title="Toggles light & dark"
                  aria-label="auto"
                  aria-live="polite"
                >
                  <IconMoon class="absolute top-[50%] left-[50%] -translate-[50%] scale-100 rotate-0 transition-all dark:scale-0 dark:-rotate-90" />
                  <IconSunHigh class="absolute top-[50%] left-[50%] -translate-[50%] scale-0 rotate-90 transition-all dark:scale-100 dark:rotate-0" />
                </button>
              </li>
            )
          }
        </ul>
      </nav>
    </div>
  </div>
  <Hr />
</header>

<style>
  .rss-link {
    display: inline-block;
    transition: transform 0.2s ease-in-out;
    margin-left: 0.5rem; /* ÂæÆË∞ÉÈó¥Ë∑ù */
  }
  .rss-link:hover {
    transform: scale(1.15);
  }
  .rss-icon {
    stroke: var(--color-accent);
    stroke-width: 2;
  }

  /* ÊäòÂè†ËèúÂçïÊ†∑Âºè */
  .dropdown-container {
    position: relative;
  }
  
  .dropdown-trigger {
    background: none;
    border: none;
    cursor: pointer;
    transition: color 0.2s ease;
  }
  
  .dropdown-trigger:focus {
    outline: 2px solid var(--color-accent);
    outline-offset: 2px;
  }
  
  .dropdown-menu {
    transform: translateY(-10px);
    opacity: 0;
    visibility: hidden;
    transition: all 0.2s ease-in-out;
    min-width: 160px;
    backdrop-filter: blur(8px);
    background: rgb(var(--color-background) / 0.95);
    border: 1px solid rgb(var(--color-card) / 0.8);
  }
  
  .dropdown-menu.show {
    transform: translateY(0);
    opacity: 1;
    visibility: visible;
  }
  
  .dropdown-arrow {
    transition: transform 0.2s ease;
  }
  
  .dropdown-trigger[aria-expanded="true"] .dropdown-arrow {
    transform: rotate(180deg);
  }
  
  .dropdown-link {
    transition: all 0.2s ease;
    border-bottom: 1px solid rgb(var(--color-card) / 0.3);
  }
  
  .dropdown-link:last-child {
    border-bottom: none;
  }
  
  .dropdown-link.active-nav {
    color: var(--color-accent);
    background-color: rgb(var(--color-accent) / 0.1);
  }

  /* Ê°åÈù¢Á´ØÊ†∑Âºè */
  @media (min-width: 640px) {
    .dropdown-container {
      position: relative;
    }
    
    .dropdown-menu {
      position: absolute;
      top: 100%;
      left: 50%;
      transform: translateX(-50%) translateY(-10px);
      width: max-content;
      min-width: 180px;
    }
    
    .dropdown-menu.show {
      transform: translateX(-50%) translateY(0);
    }
  }
</style>

<script>
  function toggleNav() {
    const menuBtn = document.querySelector("#menu-btn");
    const menuItems = document.querySelector("#menu-items");
    const menuIcon = document.querySelector("#menu-icon");
    const closeIcon = document.querySelector("#close-icon");

    if (!menuBtn || !menuItems || !menuIcon || !closeIcon) return;

    menuBtn.addEventListener("click", () => {
      const openMenu = menuBtn.getAttribute("aria-expanded") === "true";

      menuBtn.setAttribute("aria-expanded", openMenu ? "false" : "true");
      menuBtn.setAttribute("aria-label", openMenu ? "Open Menu" : "Close Menu");

      menuItems.classList.toggle("hidden");
      menuIcon.classList.toggle("hidden");
      closeIcon.classList.toggle("hidden");
    });
  }

  toggleNav();

  function setupDropdownMenu() {
    const dropdownBtn = document.querySelector("#more-menu-btn");
    const dropdownMenu = document.querySelector("#more-menu-items");
    
    if (!dropdownBtn || !dropdownMenu) return;

    // ÂàáÊç¢‰∏ãÊãâËèúÂçï
    dropdownBtn.addEventListener("click", (e) => {
      e.stopPropagation();
      const isExpanded = dropdownBtn.getAttribute("aria-expanded") === "true";
      
      dropdownBtn.setAttribute("aria-expanded", (!isExpanded).toString());
      dropdownMenu.classList.toggle("show");
      
      if (!isExpanded) {
        (dropdownMenu as HTMLElement).style.display = "block";
      }
    });

    // ÁÇπÂáªÂ§ñÈÉ®ÂÖ≥Èó≠ËèúÂçï
    document.addEventListener("click", (e) => {
      const target = e.target as Node;
      if (!dropdownBtn.contains(target) && !dropdownMenu.contains(target)) {
        dropdownBtn.setAttribute("aria-expanded", "false");
        dropdownMenu.classList.remove("show");
        
        // Âª∂ËøüÈöêËóèËèúÂçïÔºåËÆ©Âä®ÁîªÂÆåÊàê
        setTimeout(() => {
          if (!dropdownMenu.classList.contains("show")) {
            (dropdownMenu as HTMLElement).style.display = "none";
          }
        }, 200);
      }
    });

    // ÈîÆÁõòÊîØÊåÅ
    dropdownBtn.addEventListener("keydown", (e) => {
      const keyEvent = e as KeyboardEvent;
      if (keyEvent.key === "Enter" || keyEvent.key === " ") {
        keyEvent.preventDefault();
        (dropdownBtn as HTMLElement).click();
      }
      if (keyEvent.key === "Escape") {
        dropdownBtn.setAttribute("aria-expanded", "false");
        dropdownMenu.classList.remove("show");
        setTimeout(() => {
          if (!dropdownMenu.classList.contains("show")) {
            (dropdownMenu as HTMLElement).style.display = "none";
          }
        }, 200);
      }
    });
  }

  setupDropdownMenu();

  // Runs on view transitions navigation
  document.addEventListener("astro:after-swap", () => {
    toggleNav();
    setupDropdownMenu();
  });
</script>
