---
import type { XingsiRecord } from "@/types/xingsi";

export interface Props {
  record: XingsiRecord;
}

const { record } = Astro.props;

// 解析日期
const date = new Date(record.datetime);
const formattedDate = date.toLocaleDateString('zh-CN', {
  month: 'long',
  day: 'numeric'
});
const formattedTime = date.toLocaleTimeString('zh-CN', {
  hour: '2-digit',
  minute: '2-digit'
});

// 提取今日小计的摘要（前80字符）
const getSummary = (text: string) => {
  const cleanText = text.replace(/\*\*/g, '').replace(/\n+/g, ' ').trim();
  return cleanText.length > 80 ? cleanText.substring(0, 80) + '...' : cleanText;
};

// 获取心情图标
const getMoodIcon = (feeling: string) => {
  if (feeling.includes('平静') || feeling.includes('自在')) return '😌';
  if (feeling.includes('疲惫') || feeling.includes('累')) return '😴';
  if (feeling.includes('失望') || feeling.includes('沮丧')) return '😞';
  if (feeling.includes('焦虑') || feeling.includes('烦躁')) return '😰';
  if (feeling.includes('满足') || feeling.includes('开心')) return '😊';
  if (feeling.includes('困惑') || feeling.includes('迷茫')) return '🤔';
  return '🙂';
};

// 生成唯一ID
const cardId = `card-${record.datetime.replace(/[^0-9]/g, '')}`;
---

<article class="xingsi-card" data-id={cardId}>
  <!-- 卡片头部 -->
  <header class="card-header">
    <div class="date-section">
      <time class="date-text">{formattedDate}</time>
      <span class="time-text">{formattedTime}</span>
    </div>
    <div class="mood-section">
      <span class="mood-icon">{getMoodIcon(record.察觉与洞察.感受)}</span>
    </div>
  </header>

  <!-- 主题标签 -->
  {record.主题行动复盘.details.本周主题 && (
    <div class="theme-row">
      <span class="theme-tag">
        {record.主题行动复盘.details.本周主题}
      </span>
    </div>
  )}

  <!-- 内容预览 -->
  <div class="content-preview">
    <p class="summary-text">
      {getSummary(record.今日小计)}
    </p>
    
    {record.察觉与洞察.洞察 && (
      <div class="insight-preview">
        <span class="insight-label">💡</span>
        <span class="insight-text">
          {record.察觉与洞察.洞察.length > 60 
            ? record.察觉与洞察.洞察.substring(0, 60) + '...'
            : record.察觉与洞察.洞察
          }
        </span>
      </div>
    )}
  </div>

  <!-- 点击展开按钮 -->
  <button class="expand-button" onclick={`toggleDetail('${cardId}')`}>
    <span class="expand-text">查看详情</span>
    <span class="expand-icon">▼</span>
  </button>
</article>

<!-- 详情模态框 -->
<div id={`detail-${cardId}`} class="detail-modal hidden">
  <div class="modal-overlay" onclick={`toggleDetail('${cardId}')`}></div>
  <div class="modal-content">
    <!-- 模态框头部 -->
    <header class="modal-header">
      <div>
        <h2 class="modal-title">行思录详情</h2>
        <p class="modal-date">{formattedDate} {formattedTime}</p>
      </div>
      <button class="close-btn" onclick={`toggleDetail('${cardId}')`}>✕</button>
    </header>

    <!-- 模态框内容 -->
    <div class="modal-body">
      <!-- 今日小计 -->
      <section class="detail-section">
        <h3 class="section-title">📝 今日小计</h3>
        <div class="section-content">
          <p class="text-content" set:html={record.今日小计.replace(/\*\*/g, '').replace(/\n/g, '<br>')}></p>
        </div>
      </section>

      <!-- 主题行动复盘 -->
      {record.主题行动复盘.title && (
        <section class="detail-section">
          <h3 class="section-title">🔄 主题行动复盘</h3>
          <div class="section-content">
            <h4 class="subsection-title">"{record.主题行动复盘.title}"</h4>
            <div class="details-grid">
              <div class="detail-item">
                <strong>本周主题：</strong>
                <span>{record.主题行动复盘.details.本周主题}</span>
              </div>
              {record.主题行动复盘.details.今日实验 && (
                <div class="detail-item">
                  <strong>今日实验：</strong>
                  <span>{record.主题行动复盘.details.今日实验}</span>
                </div>
              )}
              {record.主题行动复盘.details.行动与观察 && (
                <div class="detail-item">
                  <strong>行动与观察：</strong>
                  <span>{record.主题行动复盘.details.行动与观察}</span>
                </div>
              )}
            </div>
          </div>
        </section>
      )}

      <!-- 察觉与洞察 -->
      <section class="detail-section">
        <h3 class="section-title">💡 察觉与洞察</h3>
        <div class="section-content">
          <div class="insight-details">
            <div class="detail-item">
              <strong>感受：</strong>
              <span class="feeling-text">{record.察觉与洞察.感受}</span>
            </div>
            <div class="detail-item">
              <strong>洞察：</strong>
              <div class="insight-content">
                {record.察觉与洞察.洞察}
              </div>
            </div>
          </div>
        </div>
      </section>

      <!-- 明日计划 -->
      {record.明日计划 && (
        <section class="detail-section">
          <h3 class="section-title">🎯 明日计划</h3>
          <div class="section-content">
            <p class="plan-content">{record.明日计划}</p>
          </div>
        </section>
      )}

      <!-- 配图 -->
      {record.image_url && (
        <section class="detail-section">
          <h3 class="section-title">🖼️ 配图</h3>
          <div class="section-content">
            <img 
              src={record.image_url} 
              alt="行思录配图"
              class="detail-image"
              loading="lazy"
            />
          </div>
        </section>
      )}
    </div>

    <!-- 模态框底部 -->
    <footer class="modal-footer">
      {record.flomo_link && (
        <a href={record.flomo_link} class="flomo-link" target="_blank" rel="noopener">
          📱 查看原文
        </a>
      )}
      <button class="close-btn-secondary" onclick={`toggleDetail('${cardId}')`}>
        关闭
      </button>
    </footer>
  </div>
</div>

<style>
  /* 卡片主体样式 - 更紧凑 */
  .xingsi-card {
    background: rgb(var(--color-fill));
    border: 1px solid rgb(var(--color-border));
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
    transition: all 0.3s ease;
    cursor: pointer;
    padding: 0.75rem;
  }

  .xingsi-card:hover {
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);
    transform: translateY(-0.25rem) scale(1.02);
  }

  /* 卡片头部 */
  .card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.5rem;
  }

  .date-section {
    display: flex;
    flex-direction: column;
  }

  .date-text {
    font-size: 0.875rem;
    font-weight: 500;
    color: rgb(var(--color-text-base));
  }

  .time-text {
    font-size: 0.75rem;
    color: rgb(var(--color-text-muted));
  }

  .mood-section {
    display: flex;
    align-items: center;
  }

  .mood-icon {
    font-size: 1.125rem;
  }

  /* 主题标签 */
  .theme-row {
    margin-bottom: 0.5rem;
  }

  .theme-tag {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    border-radius: 9999px;
    font-weight: 500;
    background: rgb(var(--color-accent) / 0.1);
    color: rgb(var(--color-accent));
  }

  /* 内容预览 - 更紧凑 */
  .content-preview {
    margin-bottom: 0.75rem;
  }

  .content-preview > * {
    margin-bottom: 0.5rem;
  }

  .content-preview > *:last-child {
    margin-bottom: 0;
  }

  .summary-text {
    font-size: 0.875rem;
    color: rgb(var(--color-text-base));
    line-height: 1.5;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .insight-preview {
    display: flex;
    align-items: flex-start;
    gap: 0.25rem;
    padding: 0.5rem;
    background: rgb(var(--color-accent) / 0.05);
    border-radius: 0.375rem;
  }

  .insight-label {
    font-size: 0.875rem;
    flex-shrink: 0;
  }

  .insight-text {
    font-size: 0.75rem;
    color: rgb(var(--color-text-muted));
    font-style: italic;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* 展开按钮 */
  .expand-button {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem;
    font-size: 0.875rem;
    color: rgb(var(--color-accent));
    background: rgb(var(--color-accent) / 0.05);
    border: none;
    border-radius: 0.375rem;
    transition: all 0.2s ease;
    cursor: pointer;
  }

  .expand-button:hover {
    background: rgb(var(--color-accent) / 0.1);
  }

  .expand-text {
    font-weight: 500;
  }

  .expand-icon {
    font-size: 0.75rem;
    transition: transform 0.2s ease;
  }

  .expand-button:hover .expand-icon {
    transform: rotate(180deg);
  }

  /* 模态框样式 */
  .detail-modal {
    position: fixed;
    inset: 0;
    z-index: 50;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
  }

  .modal-overlay {
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(4px);
  }

  .modal-content {
    position: relative;
    background: rgb(var(--color-fill));
    border-radius: 0.5rem;
    box-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
    width: 100%;
    max-width: 56rem;
    max-height: 90vh;
    overflow: hidden;
    border: 1px solid rgb(var(--color-border));
  }

  /* 模态框头部 */
  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    padding: 1rem;
    border-bottom: 1px solid rgb(var(--color-border));
    background: rgb(var(--color-card-muted));
  }

  .modal-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: rgb(var(--color-text-base));
  }

  .modal-date {
    font-size: 0.875rem;
    color: rgb(var(--color-text-muted));
  }

  .close-btn {
    color: rgb(var(--color-text-muted));
    font-size: 1.25rem;
    font-weight: bold;
    cursor: pointer;
    background: none;
    border: none;
    padding: 0.25rem;
  }

  .close-btn:hover {
    color: rgb(var(--color-text-base));
  }

  /* 模态框内容 */
  .modal-body {
    padding: 1rem;
    overflow-y: auto;
    max-height: calc(90vh - 120px);
  }

  .modal-body > * {
    margin-bottom: 1.5rem;
  }

  .modal-body > *:last-child {
    margin-bottom: 0;
  }

  .detail-section {
    border-bottom: 1px solid rgb(var(--color-border));
    padding-bottom: 1rem;
  }

  .detail-section:last-child {
    border-bottom: none;
  }

  .section-title {
    font-size: 1.125rem;
    font-weight: 600;
    color: rgb(var(--color-text-base));
    margin-bottom: 0.75rem;
  }

  .section-content > * {
    margin-bottom: 0.75rem;
  }

  .section-content > *:last-child {
    margin-bottom: 0;
  }

  .subsection-title {
    font-size: 1rem;
    font-weight: 500;
    color: rgb(var(--color-accent));
    background: rgb(var(--color-accent) / 0.1);
    padding: 0.5rem;
    border-radius: 0.375rem;
  }

  .details-grid > * {
    margin-bottom: 0.5rem;
  }

  .details-grid > *:last-child {
    margin-bottom: 0;
  }

  .detail-item {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .detail-item strong {
    color: rgb(var(--color-text-base));
    min-width: 6rem;
  }

  .detail-item span {
    color: rgb(var(--color-text-muted));
  }

  .text-content {
    color: rgb(var(--color-text-base));
    line-height: 1.6;
    white-space: pre-line;
  }

  .feeling-text {
    color: rgb(var(--color-accent));
    font-weight: 500;
  }

  .insight-content {
    color: rgb(var(--color-text-base));
    line-height: 1.6;
    background: rgb(var(--color-accent) / 0.1);
    padding: 0.75rem;
    border-radius: 0.375rem;
    border-left: 4px solid rgb(var(--color-accent));
    font-style: italic;
  }

  .plan-content {
    color: rgb(var(--color-text-base));
    line-height: 1.6;
    background: rgb(var(--color-card-muted));
    padding: 0.75rem;
    border-radius: 0.375rem;
  }

  .detail-image {
    width: 100%;
    max-width: 28rem;
    margin: 0 auto;
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
  }

  /* 模态框底部 */
  .modal-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
    border-top: 1px solid rgb(var(--color-border));
    background: rgb(var(--color-card-muted));
  }

  .flomo-link {
    color: rgb(var(--color-accent));
    font-size: 0.875rem;
    transition: color 0.2s ease;
    text-decoration: none;
  }

  .flomo-link:hover {
    color: rgb(var(--color-accent));
    opacity: 0.8;
  }

  .close-btn-secondary {
    padding: 0.5rem 1rem;
    background: rgb(var(--color-text-muted));
    color: white;
    border: none;
    border-radius: 0.375rem;
    transition: background 0.2s ease;
    cursor: pointer;
  }

  .close-btn-secondary:hover {
    background: rgb(var(--color-text-base));
  }

  /* 隐藏类 */
  .hidden {
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
  }

  /* 响应式 */
  @media (max-width: 640px) {
    .modal-content {
      max-width: 100%;
      margin: 0.5rem;
    }
    
    .detail-item {
      flex-direction: column;
    }
    
    .modal-footer {
      flex-direction: column;
      gap: 0.5rem;
    }
  }

  @media (min-width: 640px) {
    .detail-item {
      flex-direction: row;
      align-items: flex-start;
      gap: 0.5rem;
    }
  }
</style>

<script>
  // 切换详情显示的全局函数
  (window as any).toggleDetail = function(cardId: string) {
    const modal = document.getElementById(`detail-${cardId}`);
    if (modal) {
      modal.classList.toggle('hidden');
      
      // 防止背景滚动
      if (!modal.classList.contains('hidden')) {
        document.body.style.overflow = 'hidden';
      } else {
        document.body.style.overflow = '';
      }
    }
  };

  // ESC键关闭模态框
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      const openModals = document.querySelectorAll('.detail-modal:not(.hidden)');
      openModals.forEach(modal => {
        modal.classList.add('hidden');
      });
      document.body.style.overflow = '';
    }
  });
</script>