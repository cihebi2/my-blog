---
// TableOfContents.astro - 动态目录组件
---

<!-- 移动端目录按钮 -->
<button
  id="toc-mobile-toggle"
  class="toc-mobile-button"
  title="显示/隐藏目录"
>
  <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
    <path d="M3 9h14V7H3v2zm0 4h14v-2H3v2zm0 4h14v-2H3v2zm16 0h2v-2h-2v2zm0-10v2h2V7h-2zm0 6h2v-2h-2v2z"/>
  </svg>
</button>

<!-- 移动端目录面板 -->
<div
  id="toc-mobile-panel"
  class="toc-mobile-panel"
>
  <div class="toc-mobile-header">
    <h3 class="toc-mobile-title">目录</h3>
    <button
      id="toc-mobile-close"
      class="toc-mobile-close"
    >
      <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor">
        <path d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"/>
      </svg>
    </button>
  </div>
  <ul id="toc-mobile-list" class="toc-mobile-list">
    <!-- 移动端目录将通过 JavaScript 动态生成 -->
  </ul>
</div>

<!-- 桌面端目录 -->
<aside
  id="table-of-contents"
  class="toc-container"
>
  <nav class="toc-nav">
    <h3 class="toc-title">目录</h3>
    <ul id="toc-list" class="toc-list">
      <!-- 目录将通过 JavaScript 动态生成 -->
    </ul>
  </nav>
</aside>

<style>
  /* 桌面端目录容器 */
  .toc-container {
    position: fixed;
    left: 2rem;
    top: 50%;
    transform: translateY(-50%);
    width: 16rem;
    max-height: 75vh;
    overflow-y: auto;
    display: none;
    z-index: 30;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    pointer-events: none;
  }
  
  /* 收起状态 */
  .toc-container.collapsed {
    left: -14rem;
    opacity: 0.9;
    visibility: visible;
    pointer-events: auto;
  }
  
  /* 移除悬停展开功能，避免干扰阅读 */
  
  /* 展开状态 */
  .toc-container.visible {
    opacity: 1;
    visibility: visible;
    left: 2rem;
    pointer-events: auto;
  }
  
  /* 收起时的提示标签 */
  .toc-container.collapsed::after {
    content: '📋';
    position: absolute;
    right: -3rem;
    top: 50%;
    transform: translateY(-50%);
    width: 2.5rem;
    height: 2.5rem;
    background: rgba(var(--color-card), 0.95);
    border: 1px solid rgba(var(--color-accent), 0.2);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1rem;
    cursor: pointer;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.2s ease;
    z-index: 35;
  }
  
  .toc-container.collapsed::after:hover {
    transform: translateY(-50%) scale(1.1);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    cursor: pointer;
  }
  
  /* 屏幕宽度检测 */
  @media (min-width: 1024px) and (max-width: 1679px) {
    .toc-container {
      display: block;
      /* 中等屏幕默认收起 */
    }
  }
  
  @media (min-width: 1680px) {
    .toc-container {
      display: block;
      /* 大屏幕自动展开 */
    }
  }
  
  .toc-nav {
    border-radius: 0.75rem;
    border: 1px solid rgba(var(--color-accent), 0.2);
    background: linear-gradient(145deg, 
      rgba(var(--color-card), 0.95) 0%, 
      rgba(var(--color-card), 0.9) 100%);
    padding: 1.25rem;
    box-shadow: 
      0 20px 25px -5px rgba(0, 0, 0, 0.1),
      0 10px 10px -5px rgba(0, 0, 0, 0.04),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(12px) saturate(180%);
    scrollbar-width: thin;
    scrollbar-color: rgba(var(--color-accent), 0.3) transparent;
    position: relative;
    overflow: hidden;
  }
  
  .toc-nav::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, 
      rgba(var(--color-accent), 0.5) 0%, 
      rgba(var(--color-accent), 0.8) 50%, 
      rgba(var(--color-accent), 0.5) 100%);
    border-radius: 0.75rem 0.75rem 0 0;
  }
  
  .toc-title {
    margin-bottom: 1rem;
    font-size: 0.875rem;
    font-weight: 700;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    position: relative;
  }
  
  .toc-title::after {
    content: '';
    position: absolute;
    bottom: -0.25rem;
    left: 0;
    width: 2rem;
    height: 2px;
    background: rgba(var(--color-accent), 0.6);
    border-radius: 1px;
  }
  
  .toc-list {
    font-size: 0.875rem;
  }
  
  .toc-list li {
    margin-bottom: 0.25rem;
  }
  
  /* 移动端目录按钮 */
  .toc-mobile-button {
    position: fixed;
    bottom: 5rem;
    right: 1rem;
    z-index: 50;
    border-radius: 50%;
    background-color: var(--color-accent);
    padding: 0.75rem;
    color: var(--color-background);
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    transition: transform 0.2s ease-in-out;
    border: none;
    cursor: pointer;
  }
  
  .toc-mobile-button:hover {
    transform: scale(1.1);
  }
  
  @media (min-width: 1024px) {
    .toc-mobile-button {
      display: none;
    }
  }
  
  /* 移动端目录面板 */
  .toc-mobile-panel {
    position: fixed;
    left: 1rem;
    right: 1rem;
    top: 5rem;
    z-index: 40;
    border-radius: 0.5rem;
    border: 1px solid var(--color-border);
    background-color: rgb(from var(--color-background) r g b / 0.95);
    padding: 1rem;
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    backdrop-filter: blur(8px);
    display: none;
  }
  
  .toc-mobile-panel.hidden {
    display: none;
  }
  
  @media (min-width: 1024px) {
    .toc-mobile-panel {
      display: none !important;
    }
  }
  
  .toc-mobile-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 0.75rem;
  }
  
  .toc-mobile-title {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--color-foreground);
  }
  
  .toc-mobile-close {
    color: rgb(from var(--color-foreground) r g b / 0.5);
    background: none;
    border: none;
    cursor: pointer;
    transition: color 0.2s ease-in-out;
  }
  
  .toc-mobile-close:hover {
    color: var(--color-foreground);
  }
  
  .toc-mobile-list {
    font-size: 0.875rem;
    max-height: 15rem;
    overflow-y: auto;
  }
  
  .toc-mobile-list li {
    margin-bottom: 0.25rem;
  }
  
  .toc-link {
    display: block;
    padding: 0.5rem 0.75rem;
    margin: 0.25rem 0;
    color: rgba(var(--color-base), 0.8);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    text-decoration: none;
    border-left: 3px solid transparent;
    border-radius: 0 0.375rem 0.375rem 0;
    position: relative;
    overflow: hidden;
    line-height: 1.4;
  }
  
  .toc-link::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 100%;
    background: linear-gradient(90deg, 
      rgba(var(--color-accent), 0.1) 0%, 
      rgba(var(--color-accent), 0.05) 100%);
    transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    z-index: -1;
  }
  
  .toc-link:hover {
    color: var(--color-accent);
    transform: translateX(4px);
    border-left-color: rgba(var(--color-accent), 0.5);
  }
  
  .toc-link:hover::before {
    width: 100%;
  }
  
  .toc-link.active {
    color: var(--color-accent);
    border-left-color: var(--color-accent);
    font-weight: 600;
    background: linear-gradient(90deg, 
      rgba(var(--color-accent), 0.15) 0%, 
      rgba(var(--color-accent), 0.05) 100%);
    transform: translateX(6px);
    box-shadow: 0 2px 4px rgba(var(--color-accent), 0.2);
  }
  
  .toc-link.active::before {
    width: 100%;
    background: linear-gradient(90deg, 
      rgba(var(--color-accent), 0.2) 0%, 
      rgba(var(--color-accent), 0.1) 100%);
  }
  
  .toc-link.h1 {
    font-size: 0.9rem;
    font-weight: 600;
    margin: 0.5rem 0;
  }
  
  .toc-link.h2 {
    font-size: 0.85rem;
    margin-left: 0.5rem;
  }
  
  .toc-link.h3 {
    font-size: 0.8rem;
    margin-left: 1rem;
    opacity: 0.9;
  }
  
  .toc-link.h4 {
    font-size: 0.75rem;
    margin-left: 1.5rem;
    opacity: 0.8;
  }
  
  .toc-link.h5,
  .toc-link.h6 {
    font-size: 0.7rem;
    margin-left: 2rem;
    opacity: 0.7;
  }
</style>

<script is:inline data-astro-rerun>
  // 全局状态变量
  let isManuallyExpanded = false;
  let isManuallyCollapsed = false;

  function generateTableOfContents() {
    const tocContainer = document.getElementById('table-of-contents');
    const tocList = document.getElementById('toc-list');
    const tocMobileList = document.getElementById('toc-mobile-list');
    const tocMobileToggle = document.getElementById('toc-mobile-toggle');
    const article = document.getElementById('article');
    
    if (!article) return;
    
    // 获取所有标题元素
    const headings = article.querySelectorAll('h1, h2, h3, h4, h5, h6');
    
    if (headings.length === 0) {
      if (tocContainer) tocContainer.style.display = 'none';
      if (tocMobileToggle) tocMobileToggle.style.display = 'none';
      return;
    }
    
    // 显示目录容器并根据屏幕宽度设置状态
    if (tocContainer) {
      tocContainer.style.display = 'block';
      setTimeout(() => {
        updateTocVisibilityByScreenSize();
      }, 100);
    }
    
    // 生成目录项的函数
    function createTocItems(targetList) {
      if (!targetList) return;
      
      targetList.innerHTML = '';
      
      headings.forEach((heading, index) => {
        if (!heading.id) {
          heading.id = `heading-${index}`;
        }
        
        const li = document.createElement('li');
        const a = document.createElement('a');
        
        a.href = `#${heading.id}`;
        a.textContent = heading.textContent?.replace('#', '').trim() || '';
        a.className = `toc-link ${heading.tagName.toLowerCase()}`;
        
        li.appendChild(a);
        targetList.appendChild(li);
      });
    }
    
    // 为桌面端和移动端都生成目录
    createTocItems(tocList);
    createTocItems(tocMobileList);
    
    // 添加滚动监听，高亮当前章节
    setupScrollSpy();
    
    // 设置移动端目录功能
    setupMobileToc();
    
    // 设置智能显示控制
    setupSmartVisibility();
  }
  
  // 智能显示控制
  function updateTocVisibilityByScreenSize() {
    const tocContainer = document.getElementById('table-of-contents');
    if (!tocContainer) return;
    
    const screenWidth = window.innerWidth;
    
    if (screenWidth >= 1680) {
      // 大屏幕：自动展开（移除collapsed，添加visible）
      tocContainer.classList.remove('collapsed');
      tocContainer.classList.add('visible');
    } else if (screenWidth >= 1024) {
      // 中等屏幕：只有在没有手动操作时才设置默认状态
      if (!isManuallyExpanded && !isManuallyCollapsed) {
        tocContainer.classList.remove('visible');
        tocContainer.classList.add('collapsed');
      }
    } else {
      // 小屏幕：完全隐藏，使用移动端按钮
      tocContainer.classList.remove('visible', 'collapsed');
    }
  }
  
  function setupSmartVisibility() {
    const tocContainer = document.getElementById('table-of-contents');
    if (!tocContainer) return;
    
    // 监听窗口大小变化
    let resizeTimer = null;
    window.addEventListener('resize', () => {
      if (resizeTimer) clearTimeout(resizeTimer);
      resizeTimer = setTimeout(() => {
        updateTocVisibilityByScreenSize();
      }, 150);
    });
    
    // 添加点击切换功能（用于中等屏幕）
    
    tocContainer.addEventListener('click', (_e) => {
      const screenWidth = window.innerWidth;
      
      // 只在中等屏幕启用点击切换
      if (screenWidth >= 1024 && screenWidth < 1680) {
        if (tocContainer.classList.contains('collapsed')) {
          tocContainer.classList.remove('collapsed');
          tocContainer.classList.add('visible');
          isManuallyExpanded = true;
          isManuallyCollapsed = false;
        } else if (isManuallyExpanded) {
          tocContainer.classList.remove('visible');
          tocContainer.classList.add('collapsed');
          isManuallyExpanded = false;
          isManuallyCollapsed = true;
        }
      }
    });
    
    // 点击外部区域收起（仅中等屏幕手动展开时）
    document.addEventListener('click', (e) => {
      const screenWidth = window.innerWidth;
      
      if (screenWidth >= 1024 && screenWidth < 1680 && isManuallyExpanded) {
        if (!tocContainer.contains(e.target)) {
          tocContainer.classList.remove('visible');
          tocContainer.classList.add('collapsed');
          isManuallyExpanded = false;
          isManuallyCollapsed = true;
        }
      }
    });
    
    // 初始设置
    updateTocVisibilityByScreenSize();
  }
  
  function setupScrollSpy() {
    const tocLinks = document.querySelectorAll('.toc-link');
    const headings = document.querySelectorAll('#article h1, #article h2, #article h3, #article h4, #article h5, #article h6');
    
    if (tocLinks.length === 0 || headings.length === 0) return;
    
    let activeSection = null;
    
    // 检查文章底部并控制目录显示（仅在大屏幕自动展开时生效）
    function checkArticleVisibility() {
      const article = document.getElementById('article');
      const tocContainer = document.getElementById('table-of-contents');
      
      if (!article || !tocContainer) return;
      
      const screenWidth = window.innerWidth;
      
      // 只在大屏幕（1680px+）自动控制目录显示，中等屏幕不自动控制
      if (screenWidth >= 1680) {
        const articleRect = article.getBoundingClientRect();
        const windowHeight = window.innerHeight;
        
        // 如果文章底部超出视窗底部，隐藏目录
        if (articleRect.bottom < windowHeight * 0.3) {
          tocContainer.classList.remove('visible');
        } else {
          tocContainer.classList.add('visible');
        }
      }
    }
    
    // 更精确的滚动监听
    const observer = new IntersectionObserver(
      (entries) => {
        // 找到当前可见的最上面的标题
        let topEntry = null;
        let topY = Infinity;
        
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const rect = entry.boundingRect;
            if (rect.top >= 0 && rect.top < topY) {
              topY = rect.top;
              topEntry = entry;
            }
          }
        });
        
        if (topEntry && topEntry.target.id !== activeSection) {
          activeSection = topEntry.target.id;
          updateActiveLink(activeSection);
        }
      },
      {
        rootMargin: '-20% 0px -70% 0px',
        threshold: [0, 0.25, 0.5, 0.75, 1]
      }
    );
    
    // 监听滚动事件来控制目录显示
    let scrollTimer = null;
    window.addEventListener('scroll', () => {
      if (scrollTimer) clearTimeout(scrollTimer);
      scrollTimer = setTimeout(checkArticleVisibility, 50);
    });
    
    // 更新激活链接的函数
    function updateActiveLink(activeId) {
      // 移除所有active类
      document.querySelectorAll('.toc-link').forEach(link => {
        link.classList.remove('active');
      });
      
      // 添加active类到当前链接
      const activeLinks = document.querySelectorAll(`.toc-link[href="#${activeId}"]`);
      activeLinks.forEach(link => {
        if (link) {
          link.classList.add('active');
          
          // 滚动到可见区域（仅桌面端目录）
          const tocContainer = document.getElementById('table-of-contents');
          if (tocContainer && tocContainer.contains(link)) {
            const tocNav = tocContainer.querySelector('.toc-nav');
            if (tocNav) {
              const linkRect = link.getBoundingClientRect();
              const navRect = tocNav.getBoundingClientRect();
              
              if (linkRect.top < navRect.top || linkRect.bottom > navRect.bottom) {
                link.scrollIntoView({
                  behavior: 'smooth',
                  block: 'center'
                });
              }
            }
          }
        }
      });
    }
    
    headings.forEach((heading) => {
      observer.observe(heading);
    });
    
    // 初始检查文章可见性
    checkArticleVisibility();
    
    // 点击目录链接时平滑滚动
    const allTocLinks = document.querySelectorAll('.toc-link');
    allTocLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        
        const targetId = link.getAttribute('href')?.substring(1);
        const targetElement = document.getElementById(targetId);
        
        if (targetElement) {
          // 立即更新活跃状态
          updateActiveLink(targetId);
          
          // 平滑滚动到目标
          targetElement.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
          
          // 平滑滚动完成
          
          // 如果是移动端，关闭目录面板
          const mobilePanel = document.getElementById('toc-mobile-panel');
          if (mobilePanel && mobilePanel.style.display === 'block') {
            mobilePanel.style.display = 'none';
          }
        }
      });
    });
  }
  
  function setupMobileToc() {
    const mobileToggle = document.getElementById('toc-mobile-toggle');
    const mobilePanel = document.getElementById('toc-mobile-panel');
    const mobileClose = document.getElementById('toc-mobile-close');
    
    if (!mobileToggle || !mobilePanel || !mobileClose) return;
    
    // 切换移动端目录面板
    mobileToggle.addEventListener('click', () => {
      if (mobilePanel.style.display === 'none' || mobilePanel.style.display === '') {
        mobilePanel.style.display = 'block';
      } else {
        mobilePanel.style.display = 'none';
      }
    });
    
    // 关闭移动端目录面板
    mobileClose.addEventListener('click', () => {
      mobilePanel.style.display = 'none';
    });
    
    // 点击面板外部关闭
    document.addEventListener('click', (e) => {
      if (!mobilePanel.contains(e.target) && !mobileToggle.contains(e.target)) {
        mobilePanel.style.display = 'none';
      }
    });
  }
  
  // 页面加载后生成目录
  document.addEventListener('DOMContentLoaded', generateTableOfContents);
  
  // Astro page transition 后重新生成目录
  document.addEventListener('astro:after-swap', generateTableOfContents);
</script> 