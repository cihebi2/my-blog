---
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import LinkButton from "@/components/LinkButton.astro";
import CategoryCard from "@/components/CategoryCard.astro";
import Hr from "@/components/Hr.astro";
import getAllPosts from "@/utils/getAllPosts";
import getSortedPosts from "@/utils/getSortedPosts";
import { getPopularCategories } from "@/utils/getCategoryData";
import IconArrowRight from "@/assets/icons/IconArrowRight.svg";
import Datetime from "@/components/Datetime.astro";
import { getPath } from "@/utils/getPath";
import { slugifyStr } from "@/utils/slugify";
import { SITE, HERO, getPageBackground } from "@/config";
import { quotes } from "@/data/quotes";

const posts = await getAllPosts();

const sortedPosts = getSortedPosts(posts);
const popularCategories = getPopularCategories(posts, 6);
---

<Layout>
  <Header />
  <main id="main-content" data-layout="index">
    <div class="hero-container" style={`background-image: url(${getPageBackground('home')})`}>
      <div class="hero-overlay"></div>
    </div>

    <section id="hero" class="hero-content">
      <div id="quote-container">
        <p id="quote-display" class="quote-text"></p>
      </div>
    </section>

    <div class="main-content-wrapper">
      <Hr />

      {/* 文章分类展示区域 */}
      {
        popularCategories.length > 0 && (
          <section id="categories" class="pt-12 pb-6">
            <div class="flex items-center justify-between mb-8">
              <h2 class="text-2xl font-semibold tracking-wide">📂 文章分类</h2>
              <LinkButton href="/tags/" class="text-sm">
                查看全部分类
                <IconArrowRight class="inline-block" />
              </LinkButton>
            </div>
            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
              {popularCategories.map(({ tag, postCount }) => (
                <CategoryCard tag={tag} postCount={postCount} />
                ))}
            </div>
            </section>
        )
      }

      <Hr />

      {
        sortedPosts.length > 0 && (
          <section id="all-posts" class="pt-12 pb-6">
            <h2 class="text-2xl font-semibold tracking-wide mb-8">📝 最新文章</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {sortedPosts.map(
                (data, index) =>
                  index < SITE.postPerIndex && (
                    <div class="glass-card border border-skin-line rounded-lg p-6 shadow-sm hover:shadow-md transition-all duration-300 hover:scale-[1.02] h-full flex flex-col">
                      <a
                        href={getPath(data.id, data.filePath)}
                        class="block group flex-1 flex flex-col"
                      >
                        <h3 class="text-lg font-semibold text-accent mb-3 group-hover:underline leading-tight"
                            style={{ viewTransitionName: slugifyStr(data.data.title) }}>
                          {data.data.title}
                        </h3>
                        <p class="text-skin-base/80 text-sm mb-4 flex-1 line-clamp-3">
                          {data.data.description}
                        </p>
                        <div class="mt-auto">
                          <div class="text-xs text-skin-base/60 mb-3">
                            <Datetime pubDatetime={data.data.pubDatetime} modDatetime={data.data.modDatetime} timezone={data.data.timezone} />
                          </div>
                          {data.data.tags && data.data.tags.length > 0 && (
                            <div class="flex flex-wrap gap-2">
                              {data.data.tags.slice(0, 3).map(tag => (
                                <span class="px-2 py-1 bg-skin-accent/10 text-accent rounded-full text-xs">
                                  {tag}
                                </span>
                              ))}
                              {data.data.tags.length > 3 && (
                                <span class="text-skin-base/60 text-xs">+{data.data.tags.length - 3}</span>
                              )}
                            </div>
                          )}
                        </div>
                      </a>
                    </div>
                  )
              )}
            </div>
          </section>
        )
      }

      <div class="my-8 text-center">
        <LinkButton href="/posts/" class="clickable">
          查看所有文章
          <IconArrowRight class="inline-block" />
        </LinkButton>
      </div>
    </div>
  </main>
  <Footer />
</Layout>

<style>
  .hero-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    background-size: cover;
    background-position: center;
    background-attachment: fixed;
    color: white;
    z-index: -1;
  }
  
  @media (max-width: 768px) {
    .hero-container {
      background-attachment: scroll;
    }
    
    .hero-content {
      height: 40vh;
      padding: 1rem;
    }
  }
  
  /* 高分辨率屏幕优化 */
  @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
    .hero-container {
      background-size: cover;
    }
  }
  

  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.4); 
    z-index: 1;
  }

  .hero-content {
    position: relative;
    height: 50vh;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 2;
    text-align: center;
    padding: 2rem;
    max-width: var(--max-w-3xl);
    width: 100%;
    margin: 0 auto;
  }
  
  @media (max-width: 768px) {
    .hero-content {
      height: 50vh;
      padding: 1rem;
    }
  }

  #quote-container {
    min-height: 120px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .quote-text {
    font-size: 1.25rem;
    font-family: var(--font-noto-serif);
    color: #ffffff;
    text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.7);
    line-height: 1.7;
    opacity: 0;
    transition: opacity 1.5s ease-in-out;
  }

  .quote-text.visible {
    opacity: 1;
  }

  /* 主要内容区域容器 */
  .main-content-wrapper {
    max-width: var(--max-w-3xl);
    margin: 0 auto;
    padding: 0 1rem;
    position: relative;
    z-index: 1;
  }
  
  @media (max-width: 768px) {
    .main-content-wrapper {
      margin-top: 10vh;
      padding-top: 2rem;
    }
  }
  
  
  /* 毛玻璃卡片效果 */
  .glass-card {
    background: rgba(255, 255, 255, 0.15);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }
  
  /* 深色主题下的毛玻璃卡片 */
  html[data-theme="dark"] .glass-card {
    background: rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  /* 网格布局样式 */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

<script
  is:inline
  define:vars={{
    quotes,
    fadeInDuration: HERO.quoteFadeInDuration,
    displayDuration: HERO.quoteDisplayDuration,
    fadeOutDuration: HERO.quoteFadeOutDuration,
  }}
>
  function fadeQuoteEffect() {
    const quoteElement = document.getElementById("quote-display");
    if (!quoteElement) return;

    let quoteIndex = -1;

    function getRandomIndex() {
      let newIndex;
      do {
        newIndex = Math.floor(Math.random() * quotes.length);
      } while (newIndex === quoteIndex);
      return newIndex;
    }

    function cycleQuotes() {
      // 1. 淡出当前名言
      quoteElement.classList.remove('visible');

      // 2. 淡出动画结束后，更换内容并准备淡入
      setTimeout(() => {
        quoteIndex = getRandomIndex();
        quoteElement.textContent = quotes[quoteIndex];
        quoteElement.classList.add('visible'); // 触发淡入
      }, fadeOutDuration);
    }

    // 首次加载
    quoteIndex = getRandomIndex();
    quoteElement.textContent = quotes[quoteIndex];
    quoteElement.classList.add('visible');

    // 设置循环
    setInterval(cycleQuotes, displayDuration + fadeOutDuration);
  }

  document.addEventListener("astro:page-load", fadeQuoteEffect);
  
  
  
  // 添加波纹动画关键帧
  const rippleStyle = document.createElement('style');
  rippleStyle.textContent = `
    @keyframes ripple {
      to {
        transform: scale(4);
        opacity: 0;
      }
    }
  `;
  document.head.appendChild(rippleStyle);
  
  
  document.addEventListener("astro:page-load", fadeQuoteEffect);
</script>
