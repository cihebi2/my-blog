---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import Socials from "@/components/Socials.astro";
import LinkButton from "@/components/LinkButton.astro";
import Card from "@/components/Card.astro";
import Hr from "@/components/Hr.astro";
import getSortedPosts from "@/utils/getSortedPosts";
import IconRss from "@/assets/icons/IconRss.svg";
import IconArrowRight from "@/assets/icons/IconArrowRight.svg";
import { SITE } from "@/config";
import { SOCIALS } from "@/constants";
import { quotes } from "@/data/quotes";

const posts = await getCollection("blog");

const sortedPosts = getSortedPosts(posts);
const featuredPosts = sortedPosts.filter(({ data }) => data.featured);
const recentPosts = sortedPosts.filter(({ data }) => !data.featured);

const coverImage = "https://cihebi.oss-cn-shanghai.aliyuncs.com/cover_1.jpg";
---

<Layout>
  <Header />
  <main id="main-content" data-layout="index">
    <div class="hero-container" style={`background-image: url(${coverImage})`}>
      <div class="hero-overlay"></div>
      <section id="hero" class="hero-content">
        <div id="quote-container">
          <p id="quote-display" class="quote-text"></p>
        </div>
      </section>
    </div>

    <div class="main-content-wrapper">
      <Hr />

      {
        featuredPosts.length > 0 && (
          <>
            <section id="featured" class="pt-12 pb-6">
              <h2 class="text-2xl font-semibold tracking-wide">Featured</h2>
              <ul>
                {featuredPosts.map(data => (
                  <Card variant="h3" {...data} />
                ))}
              </ul>
            </section>
            {recentPosts.length > 0 && <Hr />}
          </>
        )
      }

      {
        recentPosts.length > 0 && (
          <section id="recent-posts" class="pt-12 pb-6">
            <h2 class="text-2xl font-semibold tracking-wide">Recent Posts</h2>
            <ul>
              {recentPosts.map(
                (data, index) =>
                  index < SITE.postPerIndex && <Card variant="h3" {...data} />
              )}
            </ul>
          </section>
        )
      }

      <div class="my-8 text-center">
        <LinkButton href="/posts/">
          All Posts
          <IconArrowRight class="inline-block" />
        </LinkButton>
      </div>
    </div>
  </main>
  <Footer />
</Layout>

<style>
  .hero-container {
    position: relative;
    width: 100%;
    height: 50vh; 
    min-height: 300px;
    background-size: cover;
    background-position: center;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
  }

  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.4); 
    z-index: 1;
  }

  .hero-content {
    position: relative;
    z-index: 2;
    text-align: center;
    padding: 2rem;
    max-width: var(--max-w-3xl);
  }

  #quote-container {
    min-height: 120px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .quote-text {
    font-size: 1.25rem;
    font-family: var(--font-noto-serif);
    color: #ffffff;
    text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.7);
    line-height: 1.7;
    opacity: 0; /* 默认状态为透明 */
    transition: opacity 1.5s ease-in-out; /* 定义淡入淡出的过渡效果 */
  }

  .quote-text.visible {
    opacity: 1; /* 可见状态 */
  }

  /* 主要内容区域容器 */
  .main-content-wrapper {
    max-width: var(--max-w-3xl);
    margin: 0 auto;
    padding: 0 1rem;
  }
</style>

<script define:vars={{ quotes }}>
  function fadeQuoteEffect() {
    const quoteElement = document.getElementById("quote-display");
    if (!quoteElement) return;

    let quoteIndex = -1;
    const fadeInDuration = 1500;
    const displayDuration = 5000; // 停留时间
    const fadeOutDuration = 1500;

    function getRandomIndex() {
      let newIndex;
      do {
        newIndex = Math.floor(Math.random() * quotes.length);
      } while (newIndex === quoteIndex);
      return newIndex;
    }

    function cycleQuotes() {
      // 1. 淡出当前名言
      quoteElement.classList.remove('visible');

      // 2. 淡出动画结束后，更换内容并准备淡入
      setTimeout(() => {
        quoteIndex = getRandomIndex();
        quoteElement.textContent = quotes[quoteIndex];
        quoteElement.classList.add('visible'); // 触发淡入
      }, fadeOutDuration);
    }

    // 首次加载
    quoteIndex = getRandomIndex();
    quoteElement.textContent = quotes[quoteIndex];
    quoteElement.classList.add('visible');

    // 设置循环
    setInterval(cycleQuotes, displayDuration + fadeOutDuration);
  }

  document.addEventListener("astro:page-load", fadeQuoteEffect);
</script>
